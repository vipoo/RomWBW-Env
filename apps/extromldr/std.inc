ROMSIZE		EQU	512
RAMSIZE		EQU	512

BID_ROM0	EQU	$00
BID_RAM0	EQU	$80
BID_ROMN	EQU	(BID_ROM0 + ((ROMSIZE / 32) - 1))
BID_RAMN	EQU	(BID_RAM0 + ((RAMSIZE / 32) - 1))
BID_BOOT	EQU	BID_ROM0	; BOOT BANK
BID_IMG0	EQU	BID_ROM0 + 1	; ROM LOADER AND FIRST IMAGES BANK
BID_IMG1	EQU	BID_ROM0 + 2	; SECOND IMAGES BANK
BID_FSFAT	EQU	BID_ROM0 + 3	; FAT FILESYSTEM DRIVER BANK
BID_ROMD0	EQU	BID_ROM0 + 4	; FIRST ROM DRIVE BANK
BID_ROMDN	EQU	BID_ROMN	; LAST ROM DRIVE BANK
BID_RAMD0	EQU	BID_RAM0	; FIRST RAM DRIVE BANK
BID_RAMDN	EQU	BID_RAMN - 4	; LAST RAM DRIVE BANK
BID_AUX		EQU	BID_RAMN - 3	; AUX BANK (BPBIOS, ETC.)
BID_BIOS	EQU	BID_RAMN - 2	; BIOS BANK
BID_USR		EQU	BID_RAMN - 1	; USER BANK (CP/M TPA, ETC.)
BID_COM		EQU	BID_RAMN	; COMMON BANK, UPPER 32K
;
; MEMORY LAYOUT
;
SYS_SIZ		EQU	$3000			; COMBINED SIZE OF SYSTEM AREA (OS + HBIOS PROXY)
HBBUF_SIZ	EQU	1024			; INVARIANT HBIOS PHYSICAL DISK BUFFER, 1K
HBX_SIZ		EQU	$200			; HBIOS PROXY SIZE (SUBJECT TO CHANGE)
CPM_SIZ		EQU	SYS_SIZ - HBX_SIZ	; NET SIZE OF ALL OS COMPONENTS (EXCLUDING HBIOS PROXY)
CCP_SIZ		EQU	$800			; INVARIANT SIZE OF CCP
BDOS_SIZ	EQU	$E00			; INVARIANT SIZE OF BDOS
CBIOS_SIZ	EQU	CPM_SIZ - CCP_SIZ - BDOS_SIZ	; CBIOS IS THE REMAINDER

MEMTOP		EQU	$10000			; INVARIANT TOP OF Z80 ADDRESSABLE MEMORY
BNKTOP		EQU	$8000			; BANK MEMORY BARRIER

HBX_IMG		EQU	$200			; LOC OF HBX IMAGE IN HBIOS IMAGE BANK

HBBUF_END	EQU	BNKTOP			; END OF PHYSICAL DISK BUFFER IN HBIOS
HBBUF_LOC	EQU	HBBUF_END - HBBUF_SIZ	; START OF PHYSICAL DISK BUFFER
HBX_END		EQU	MEMTOP			; END OF HBIOS PROXY
HBX_LOC		EQU	HBX_END - HBX_SIZ	; START OF HBIOS PROXY
CPM_END		EQU	HBX_LOC			; END OF CPM COMPONENTS (INCLUDING CBIOS)
CPM_LOC		EQU	CPM_END - CPM_SIZ	; START OF CPM COMPONENTS
CBIOS_END	EQU	HBX_LOC			; END OF CBIOS
CBIOS_LOC	EQU	CBIOS_END - CBIOS_SIZ	; START OF CBIOS

CPM_ENT		EQU	CBIOS_LOC		; CPM ENTRY POINT (IN CBIOS)

BID_ROMEX0	EQU	$20		;$00000 to $07FFF
BID_ROMEX1	EQU	BID_ROMEX0 + 1	;$08000 to $0FFFF
BID_ROMEX2	EQU	BID_ROMEX0 + 2	;$10000 to $17FFF
BID_ROMEX3	EQU	BID_ROMEX0 + 3	;$18000 to $1FFFF
BID_ROMEX4	EQU	BID_ROMEX0 + 4

BF_SYS		EQU	$F0
BF_SYSRESET	EQU	BF_SYS + 0	; SOFT RESET HBIOS
BF_SYSVER	EQU	BF_SYS + 1	; GET HBIOS VERSION
BF_SYSSETBNK	EQU	BF_SYS + 2	; SET CURRENT BANK
BF_SYSGETBNK	EQU	BF_SYS + 3	; GET CURRENT BANK
BF_SYSSETCPY	EQU	BF_SYS + 4	; BANK MEMORY COPY SETUP
BF_SYSBNKCPY	EQU	BF_SYS + 5	; BANK MEMORY COPY
BF_SYSALLOC	EQU	BF_SYS + 6	; ALLOC HBIOS HEAP MEMORY
BF_SYSFREE	EQU	BF_SYS + 7	; FREE HBIOS HEAP MEMORY
BF_SYSGET	EQU	BF_SYS + 8	; GET HBIOS INFO
BF_SYSSET	EQU	BF_SYS + 9	; SET HBIOS PARAMETERS
BF_SYSPEEK	EQU	BF_SYS + 10	; GET A BYTE VALUE FROM ALT BANK
BF_SYSPOKE	EQU	BF_SYS + 11	; SET A BYTE VALUE IN ALT BANK
BF_SYSINT	EQU	BF_SYS + 12	; MANAGE INTERRUPT VECTORS
;
BF_SYSRES_INT		EQU	$00	; RESET HBIOS INTERNAL
BF_SYSRES_WARM		EQU	$01	; WARM START (RESTART BOOT LOADER)
BF_SYSRES_COLD		EQU	$02	; COLD START
;
BF_SYSGET_CIOCNT	EQU	$00	; GET CHAR UNIT COUNT
BF_SYSGET_CIOFN		EQU	$01	; GET CIO UNIT FN/DATA ADR
BF_SYSGET_DIOCNT	EQU	$10	; GET DISK UNIT COUNT
BF_SYSGET_DIOFN		EQU	$11	; GET DIO UNIT FN/DATA ADR
BF_SYSGET_RTCCNT	EQU	$20	; GET RTC UNIT COUNT
BF_SYSGET_VDACNT	EQU	$40	; GET VDA UNIT COUNT
BF_SYSGET_VDAFN		EQU	$41	; GET VDA UNIT FN/DATA ADR
BF_SYSGET_SNDCNT	EQU	$50	; GET VDA UNIT COUNT
BF_SYSGET_SNDFN		EQU	$51	; GET SND UNIT FN/DATA ADR
BF_SYSGET_TIMER		EQU	$D0	; GET CURRENT TIMER VALUE
BF_SYSGET_SECS		EQU	$D1	; GET CURRENT SECONDS VALUE
BF_SYSGET_BOOTINFO	EQU	$E0	; GET BOOT INFORMATION
BF_SYSGET_CPUINFO	EQU	$F0	; GET CPU INFORMATION
BF_SYSGET_MEMINFO	EQU	$F1	; GET MEMORY CAPACTITY INFO
BF_SYSGET_BNKINFO	EQU	$F2	; GET BANK ASSIGNMENT INFO
;
BF_SYSSET_TIMER		EQU	$D0	; SET TIMER VALUE
BF_SYSSET_SECS		EQU	$D1	; SET SECONDS VALUE
BF_SYSSET_BOOTINFO	EQU	$E0	; SET BOOT INFORMATION
;
BF_SYSINT_INFO		EQU	$00	; GET INTERRUPT SYSTEM INFO
BF_SYSINT_GET		EQU	$10	; GET INT VECTOR ADDRESS
BF_SYSINT_SET		EQU	$20	; SET INT VECTOR ADDRESS
