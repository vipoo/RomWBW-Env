diff --git a/Source/HBIOS/hbios.asm b/Source/HBIOS/hbios.asm
index 0dcbe16..067e19a 100644
--- a/Source/HBIOS/hbios.asm
+++ b/Source/HBIOS/hbios.asm
@@ -1479,11 +1479,13 @@ NXTMIO:	LD	A,(HL)
 ;
 ; DISPLAY HBIOS MUTEX ENABLED MESSAGE
 ;
+#IFNDEF QUITEBOOT
 #IF (HBIOS_MUTEX == TRUE)
 	CALL	NEWLINE
 	CALL	PRTSTRD
 	.TEXT	"HBIOS MUTEX ENABLED$"
 #ENDIF
+#ENDIF
 ;
 	DIAG(%11111111)
 ;
@@ -1529,6 +1531,7 @@ HB_SPDTST:
 ;
 ; DISPLAY PLATFORM INFORMATION
 ;
+#IFNDEF QUITEBOOT
 	CALL	NEWLINE2
 	PRTX(STR_PLATFORM)
 ;
@@ -1611,6 +1614,7 @@ HB_Z280BUS1:
 	LD	A,INTMODE
 	CALL	PRTDECB
 #ENDIF
+#ENDIF
 
 ;
 ; DISPLAY MEMORY CONFIG
@@ -3884,7 +3888,7 @@ SYSCHK:
 	CP	DL_ERROR		; >= ERROR LEVEL
 	JR	C,SYSCHK1		; IF NOT, GO HOME
 	POP	AF			; RESTORE INCOMING AF VALUE
-;	
+;
 	; DISPLAY SYSCHK MESSAGE
 	PUSH	DE			; PRESERVE DE VALUE
 	LD	DE,STR_SYSCHK		; POINT TO PREFIX STRING
@@ -4354,8 +4358,8 @@ PS_SOUND:
 	PRTS("    $")			; PAD TO NEXT COLUMN
 
 	; DEVICE COLUMN
-	
-	PUSH	BC			; 
+
+	PUSH	BC			;
 	LD	E,C
 	XOR	A
 	LD	DE,PS_SDSND		; POINT TO DEVICE TYPE NAME TABLE
@@ -4757,7 +4761,9 @@ HB_BOOT_REC	.DB	0		; BOOT MODE (0=NORMAL, 1=RECOVERY MODE)
 #ENDIF
 ;
 STR_BANNER	.DB	"RomWBW HBIOS v", BIOSVER, ", ", TIMESTAMP, "$"
+#IFNDEF QUITEBOOT
 STR_PLATFORM	.DB	PLATFORM_NAME, "$"
+#ENDIF
 STR_SWITCH	.DB	"*** Activating CRT Console ***$"
 STR_BADINT	.DB	"\r\n*** BAD INT ***\r\n$"
 STR_LOWBAT	.DB	"\r\n\r\n+++ LOW BATTERY +++$"
diff --git a/Source/HBIOS/romldr.asm b/Source/HBIOS/romldr.asm
index aa8455b..eaea32a 100644
--- a/Source/HBIOS/romldr.asm
+++ b/Source/HBIOS/romldr.asm
@@ -158,10 +158,12 @@ start1:
 ; Loader prompt
 ;=======================================================================
 ;
+#IFNDEF QUITEBOOT
 	call	nl2			; formatting
 	ld	hl,str_banner		; display boot banner
 	call	pstr			; do it
 	call	clrbuf			; zero fill the cmd buffer
+#ENDIF
 ;
 #if (BOOT_TIMEOUT != -1)
 	; Initialize auto command timeout downcounter
@@ -174,9 +176,11 @@ start1:
 	ld	a,b			; check for
 	or	c			; ... zero
 	jr	nz,prompt		; not zero, prompt w/ timeout
+#IFNDEF QUITEBOOT
 	call	nl2			; formatting
 	ld	hl,str_autoboot		; auto command prefix
 	call	pstr			; show it
+#ENDIF
 	call	autocmd			; handle w/o prompt
 	jr	reprompt		; restart w/ autocmd disable
 #endif
@@ -253,9 +257,11 @@ concmd:
 	; if no cmd entered, fall thru to process default cmd
 ;
 autocmd:
+#IFNDEF QUITEBOOT
 	; Copy autocmd string to buffer and process it
 	ld	hl,acmd			; auto cmd string
 	call	pstr			; display it
+#ENDIF
 	ld	hl,acmd			; auto cmd string
 	ld	de,cmdbuf		; cmd buffer adr
 	ld	bc,acmd_len		; auto cmd length
@@ -466,10 +472,12 @@ setcon:
 	ld	hl,HCB_LOC + HCB_CONDEV	; Con unit num in HCB
 	rst	08			; do it
 ;
+#IFNDEF QUITEBOOT
 	; Display loader prompt on new console
 	call	nl2			; formatting
 	ld	hl,str_banner		; display boot banner
 	call	pstr			; do it
+#ENDIF
 ;
 	ret				; done
 ;
@@ -551,12 +559,14 @@ reboot:
 ;
 romload:
 ;
+#IFNDEF QUITEBOOT
 	; Notify user
 	ld	hl,str_load
 	call	pstr
 	ld	l,(ix+ra_name)
 	ld	h,(ix+ra_name+1)
 	call	pstr
+#endif
 ;
 #if (DSKYENABLE)
 	ld	hl,msg_load		; point to load message
@@ -578,16 +588,20 @@ romload1:
 	ld	h,(ix+ra_siz+1)		; ...
 	ld	b,BF_SYSSETCPY		; HBIOS func: setup bank copy
 	rst	08			; do it
+#IFNDEF QUITEBOOT
 	ld	a,'.'			; dot character
 	call	cout			; show progress
+#ENDIF
 	ld	e,(ix+ra_dest)		; DE := run dest adr
 	ld	d,(ix+ra_dest+1)	; ...
 	ld	l,(ix+ra_src)		; HL := image source adr
 	ld	h,(ix+ra_src+1)		; ...
 	ld	b,BF_SYSBNKCPY		; HBIOS func: bank copy
 	rst	08			; do it
+#IFNDEF QUITEBOOT
 	ld	a,'.'			; dot character
 	call	cout			; show progress
+#ENDIF
 ;
 	; Record boot information
 	pop	af			; recover source bank
@@ -596,8 +610,10 @@ romload1:
 	ld	b,BF_SYSSET		; HBIOS func: system set
 	ld	c,BF_SYSSET_BOOTINFO	; BBIOS subfunc: boot info
 	rst	08			; do it
+#IFNDEF QUITEBOOT
 	ld	a,'.'			; dot character
 	call	cout			; show progress
+#ENDIF
 ;
 #endif
 ;
@@ -1866,8 +1882,10 @@ acmd_to		.dw	BOOT_TIMEOUT	; auto cmd timeout
 ; Strings
 ;=======================================================================
 ;
+#IFNDEF QUITEBOOT
 str_banner	.db	PLATFORM_NAME," Boot Loader",0
 str_autoboot	.db	"AutoBoot: ",0
+#ENDIF
 str_prompt	.db	"Boot [H=Help]: ",0
 str_bs		.db	bs,' ',bs,0
 str_reboot	.db	"\r\n\r\nRestarting System...",0
