#!/bin/bash

APP_DIR=./
TEST_RUNNER_DIR=./romwbw-tests/
SCRIPT_TO_RUN=$1
TAIL=${2}
MOCK_FILE=${TEST_RUNNER_DIR}${SCRIPT_TO_RUN}.mock

MARKER=1

sudo rm -f /tmp/rcoutput.txt

SCREEN_PID=$(sudo screen -ls | grep romwbwtestrunner | cut -d. -f1 | awk '{print $1}')
if [ "$SCREEN_PID" != "" ]; then
  sudo kill $SCREEN_PID
fi

ARGS="-b -s -f -r ./RomWBW/Binary/RCZ80_dino.rom"
if test -f "$MOCK_FILE"; then
  ARGS="-t $MOCK_FILE $ARGS"
fi

echo "${SCRIPT_TO_RUN}:"
sudo screen -d -m -L -Logfile /tmp/rcoutput.txt -S "romwbwtestrunner" $(which rc2014) $ARGS
sudo screen -r romwbwtestrunner -p0 -X logfile flush 0

if [ "$TAIL" != "no-tail" ]; then
  tail -q -F -n50 /tmp/rcoutput.txt 2> /dev/null &
  tailpid=$!

  function cleanup()
  {
    kill $tailpid
  }

  trap cleanup EXIT
fi


( tail -F -n50 /tmp/rcoutput.txt  & ) | grep -q "RC2014 Boot Loader"

sudo screen -S romwbwtestrunner -p 0 -X stuff "C^M"

( tail -F -n50 /tmp/rcoutput.txt  & ) | grep -q "CP/M-80 v2.2, 54.0K TPA"

CMD=$(grep -v '^#' ${TEST_RUNNER_DIR}${SCRIPT_TO_RUN}.test)

cd ${TEST_RUNNER_DIR}

while IFS= read -r line; do
if [ "$TAIL" == "no-tail" ]; then
  printf "."
fi

if [[ ${line:0:1} == ";" ]] ; then
  if [ "$TAIL" != "no-tail" ]; then
    echo
    echo -e "\e[33m${line}\e[0m"
  fi
else

if [[ ${line:0:1} == "." ]] ; then

  if [ "${line}" == "./clear" ]; then
    if ! ./expect 0 "BAD INT"; then
      echo -e "\e[31mBAD INT DETECTED\e[0m"
      exit 1
    fi
    set +x
    sudo truncate -s 0 /tmp/rcoutput.txt
  else
    if [ "$TAIL" != "no-tail" ]; then
      echo
      echo -e "\e[33m${line}\e[0m"
    fi

    if ! eval "$line"; then
      echo
      echo -e "\e[31m${line}"
      echo -e "FAILED\e[0m"
      exit 1
    fi
  fi

else

  sudo screen -S romwbwtestrunner -p 0 -X stuff "$line"
  sudo screen -S romwbwtestrunner -p 0 -X stuff "^M"

  (( MARKER++ ))
  sudo screen -S romwbwtestrunner -p 0 -X stuff ";MK $MARKER^M"

  NEXT_WAIT_TIME=0
  until tail -n 2 /tmp/rcoutput.txt | grep -q ";MK $MARKER" || [ $NEXT_WAIT_TIME -eq 20 ]; do
    (( NEXT_WAIT_TIME++ ))
    sleep 0.1
  done

fi
fi

done <<< "$CMD"

if [ "$TAIL" == "no-tail" ]; then
  echo
fi

sudo screen -S romwbwtestrunner -p 0 -X stuff "^M;DONE^M"

( tail -F -n50 /tmp/rcoutput.txt  & ) | grep -q "DONE"

SCREEN_PID=$(sudo screen -ls | grep romwbwtestrunner | cut -d. -f1 | awk '{print $1}')
sudo kill $SCREEN_PID

if [ "$TAIL" != "no-tail" ]; then
  echo -e "\n\n"
fi

if [[ -f "./${SCRIPT_TO_RUN}.expect" ]]; then
  if ./${SCRIPT_TO_RUN}.expect /tmp/rcoutput.txt; then

    if ./expect 0 ">>> PANIC"; then
      echo "PASSED"
    else
      echo "FAILED - DUE TO PANIC"
    fi
  else

    echo "FAILED"
    exit 1
  fi
else
  ./expect 0 "BAD INT"
  echo "PASSED"
fi
